<!--  for trajectory tracking -->
<launch>

    <arg name="mav_name" default="firefly" />
    <node name="map_server" pkg="map_server" type="map_server" args="$(find hybrid_astar)/maps/map.yaml" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find hybrid_astar)/launch/config2.rviz" />

    <group ns="$(arg mav_name)1">
        <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
            <remap from="odometry" to="odometry_sensor1/odometry" />
        </node>
        <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="2.5 2 5 0 0"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

	<node pkg="offb" type="geo" name="geo" output="screen"/>
 	<node name="hybrid_astar" pkg="hybrid_astar" type="hybrid_astar"/> 
	<node name="tf_broadcaster" pkg="hybrid_astar" type="tf_broadcaster"/>
	<node pkg="rotors_gazebo" type="detector.py" name="detector" output="screen"/>
        <!--include file="$(find apriltag_ros)/launch/continuous_detection.launch"/-->
    </group>

    <!--<group ns="$(arg mav_name)2">
        <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
            <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
            <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
            <remap from="odometry" to="odometry_sensor1/odometry" />
        </node>
        <node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="6 2 5 0 0"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

	<node pkg="offb" type="geo" name="geo" output="screen"/>
 	<node name="hybrid_astar" pkg="hybrid_astar" type="hybrid_astar"/> 
	<node name="tf_broadcaster" pkg="hybrid_astar" type="tf_broadcaster"/>
	<node pkg="rotors_gazebo" type="detector.py" name="detector" output="screen"/>



    </group>-->


</launch>
